declare var _default: "\n\tfloat alpha;\n#ifdef NO_RGSS\n\n\talpha = tap( vUvG );\n\n#else\n\n\t// shader-based supersampling based on https://bgolus.medium.com/sharper-mipmapping-using-shader-based-supersampling-ed7aadb47bec\n\t// per pixel partial derivatives\n\tvec2 dx = dFdx(vUvG);\n\tvec2 dy = dFdy(vUvG);\n\t// rotated grid uv offsets\n\tvec2 uvOffsets = vec2(0.125, 0.375);\n\tvec2 offsetUV = vec2(0.0, 0.0);\n\t// supersampled using 2x2 rotated grid\n\talpha = 0.0;\n\toffsetUV.xy = vUvG + uvOffsets.x * dx + uvOffsets.y * dy;\n\talpha += tap(offsetUV);\n\toffsetUV.xy = vUvG - uvOffsets.x * dx - uvOffsets.y * dy;\n\talpha += tap(offsetUV);\n\toffsetUV.xy = vUvG + uvOffsets.y * dx - uvOffsets.x * dy;\n\talpha += tap(offsetUV);\n\toffsetUV.xy = vUvG - uvOffsets.y * dx + uvOffsets.x * dy;\n\talpha += tap(offsetUV);\n\talpha *= 0.25;\n\n#endif\n\n\talpha = clamp( alpha, 0.0, 1.0 );\n\n#ifdef INVERT_ALPHA\n\n\talpha = 1.0 - alpha;\n\n#endif\n\n\tdiffuseColor.a *= alpha;\n";
export default _default;
